{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","today","Date","getFullYear","getMonth","getDate","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","toDateString","Math","round","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAIMA,EACC,mCADDA,EAEE,2CAIJC,EAAQ,IAAIC,KACTD,EAAME,cAAuBF,EAAMG,WAAwBH,EAAMI,UAoDzDC,MAlDf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAeA,OAEE,qBAAKC,UAAmC,oBAAhBF,EAAQG,MAAyBH,EAAQG,KAAKC,KAAO,GAAM,WAAsB,MAAzG,SACE,iCACE,qBAAKF,UAAU,aAAf,SACA,uBAAOG,KAAK,OACZH,UAAU,aACVI,YAAY,YACZC,SAAY,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOC,QACjCA,MAAOZ,EACPa,WAvBO,SAACC,GACL,UAAVA,EAAIC,KACNC,MAAM,GAAD,OAAIxB,EAAJ,qBAAyBQ,EAAzB,+BAAqDR,IACxDyB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,WAoBiB,oBAAhBlB,EAAQG,KACjB,gCACA,sBAAKD,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UAA2BF,EAAQqB,KAAnC,KAA2CrB,EAAQsB,IAAIC,QAAvD,OACE,qBAAKrB,UAAU,OAAf,UAAuB,IAAIV,MAAOgC,oBAGtC,sBAAKtB,UAAU,cAAf,UACA,sBAAKA,UAAU,OAAf,cAAwBuB,KAAKC,MAAM1B,EAAQG,KAAKC,MAAhD,WACA,qBAAKF,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGG,aAGxC,SC7CEwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.d12ada87.chunk.js","sourcesContent":["\nimport { useState } from 'react';\nimport './App.css';\n\nconst api = {\n  key: \"f4a6c07de708d2585dd32a16b3c99022\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\n\nvar today = new Date(),\ndate = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\nfunction App() {\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = (evt) => {\nif(evt.key===\"Enter\"){\n fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n  .then(res => res.json())\n  .then(result => {\n    setWeather(result);\n    setQuery('');\n    console.log(result);\n\n  });\n}\n  }\n\n  return (\n\n    <div className={(typeof weather.main != \"undefined\" ?  ((weather.main.temp > 16) ? \"app warm\" : \"app\") : \"app\" )}>\n      <main>\n        <div className=\"search-box\">\n        <input type=\"text\"\n        className=\"search-bar\"\n        placeholder=\"Search...\"\n        onChange = {e => setQuery(e.target.value)}\n          value={query}\n          onKeyPress = {search}\n        ></input>\n\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n        <div className=\"location-box\">\n          <div className=\"location\">{weather.name}, {weather.sys.country} </div>\n            <div className=\"date\">{new Date().toDateString()}</div>\n\n        </div>\n        <div className=\"weather-box\"> \n        <div className=\"temp\"> {Math.round(weather.main.temp)}Â°C</div>\n        <div className=\"weather\">{weather.weather[0].main}</div>\n        </div>\n        </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}